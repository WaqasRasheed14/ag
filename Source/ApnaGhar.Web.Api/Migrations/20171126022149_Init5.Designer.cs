// <auto-generated />
using ApnaGhar.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ApnaGhar.Web.Api.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20171126022149_Init5")]
    partial class Init5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApnaGhar.Models.Listings.Listing", b =>
                {
                    b.Property<int>("ListingID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("CurrencyTypeID");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<int>("ModifiedBy");

                    b.HasKey("ListingID");

                    b.ToTable("Listing");
                });

            modelBuilder.Entity("ApnaGhar.Models.Lookups.LookupContinent", b =>
                {
                    b.Property<int>("ContinentID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryDesc");

                    b.Property<string>("CountryName");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<int>("ModifiedBy");

                    b.HasKey("ContinentID");

                    b.ToTable("LookupContinent");
                });

            modelBuilder.Entity("ApnaGhar.Models.Lookups.LookupCountry", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryDesc");

                    b.Property<string>("CountryName");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("LookupContinent");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<int>("ModifiedBy");

                    b.HasKey("CountryID");

                    b.ToTable("LookupCountry");
                });

            modelBuilder.Entity("ApnaGhar.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DatePosted");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("ApnaGhar.Models.Session.LookupLoginChannels", b =>
                {
                    b.Property<int>("LoginChannelID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChannelDescription");

                    b.Property<string>("ChannelName");

                    b.HasKey("LoginChannelID");

                    b.ToTable("LookupLoginChannels");
                });

            modelBuilder.Entity("ApnaGhar.Models.Session.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AboutMe");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<byte>("Gender");

                    b.Property<string>("HashedPassword");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Username");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ApnaGhar.Models.Session.UserLoginChannels", b =>
                {
                    b.Property<int>("LoginChannelID");

                    b.Property<int>("UserID");

                    b.Property<DateTime>("CreatedAt");

                    b.HasKey("LoginChannelID", "UserID");

                    b.ToTable("UserLoginChannels");
                });
#pragma warning restore 612, 618
        }
    }
}
